---
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import Search from "@/components/Search.astro";
import type { CollectionEntry } from "astro:content";
import Fuse, { type FuseResult } from "fuse.js";

type SearchResult = FuseResult<CollectionEntry<"languages">>;
const searchResults: SearchResult[] = [];
if (Astro.request.method === "POST") {
  try {
    const germanLanguages = await getCollection("languages", ({ id }) => {
      return id.startsWith("de/");
    });
    const slugs = germanLanguages.map((lang: any) => lang.slug);
    const names = germanLanguages.map((lang: any) => lang.data.languageName);
    const data = await Astro.request.formData();
    const language = data.get("language");
    if (slugs.includes(`de/${language as (typeof slugs)[number]}`)) {
      return Astro.redirect(`/de/${language}`, 303);
    } else if (names.includes(language as (typeof names)[number])) {
      const index = names.indexOf(language as (typeof names)[number]);
      return Astro.redirect(`/${slugs[index]}`, 303);
    } else {
      const fuseOptions = {
        keys: [
          "data.languageName",
          "data.original",
          "data.meaning",
          "data.tags",
          "slug",
        ],
      };
      const fuse = new Fuse(germanLanguages, fuseOptions);

      if (!language) {
        return;
      }
      const result = fuse.search(language as string);
      searchResults.push(...result);
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<Layout title="To kill two birds with one stone - list of all languages">
  <section class="overflow-x-auto container mt-12 max-w-screen-md mx-auto">
    <Search />
    <ul>
      {searchResults.map((result: SearchResult) => <li>{result.item.slug}</li>)}
    </ul>
  </section>
</Layout>
