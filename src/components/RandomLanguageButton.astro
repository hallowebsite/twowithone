---
import { Locales } from "@/i18n/ui";
import { useTranslations } from "@/i18n/utils";
import { getCollection } from "astro:content";
import { reorderSlugs, getNextSlug } from "@/helpers/languageChoiceHelpers";

const englishLanguages = await getCollection("languages", ({ id }) => {
  return id.startsWith("en/");
});
const germanLanguages = await getCollection("languages", ({ id }) => {
  return id.startsWith("de/");
});
const { currentSlug } = Astro.props;
const locale = currentSlug.split("/")[0];

const t = useTranslations(locale);

const languages = locale === Locales.de ? germanLanguages : englishLanguages;
const allLanguagesSlugs = languages.map((entry) => entry.slug);
const orderOfSlugsForToday = reorderSlugs(allLanguagesSlugs);
const nextSlug = getNextSlug(orderOfSlugsForToday, currentSlug);
---

<random-language-button const data-next-slug={nextSlug}>
  <a
    role="button"
    id="randomLanguage"
    class="btn mb-4 mt-2 btn-primary btn-block btn-lg"
    href="/">{t("random.button")}</a
  >
  <script>
    import { navigate } from "astro:transitions/client";
    class RandomLanguageButton extends HTMLElement {
      private nextSlug = "";

      constructor() {
        super();
        this.initialize();
      }

      initialize() {
        const button = this.querySelector("#randomLanguage");
        this.nextSlug = this.getAttribute("data-next-slug") || "";

        if (!button) {
          return;
        }

        this.addEventListeners(button);
      }

      addEventListeners(button: Element) {
        button.addEventListener("click", (e) => this.handleButtonClick(e));
      }

      handleButtonClick(e: Event) {
        e.preventDefault();
        navigate(`/${this.nextSlug.replace("en/", "")}`);
      }
    }
    customElements.define("random-language-button", RandomLanguageButton);
  </script>
</random-language-button>

<style>
  random-language-button {
    display: flex;
    flex-direction: column;
    width: 100%;
  }
</style>
