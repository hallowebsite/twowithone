---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import { randomSorting } from "@/helpers/randomSorting";
import RandomLanguageButton from "@/components/RandomLanguageButton.astro";
import FrontmatterDate from "@/components/FrontmatterDate.astro";

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/images/*.{jpeg,jpg,png,gif}",
);

interface Props {
  language: CollectionEntry<"languages">;
}
const { language } = Astro.props;
const { Content } = await language.render();
const Flags: any = language.data.flags
  .map((flag: string) => `flag-${flag}`)
  .sort(randomSorting);
const slugWithoutPath = language.slug.split("/")[1];
const locale = language.slug.split("/")[0];
const image = images["/src/images/" + slugWithoutPath + ".jpg"];
const realisedImage = await image();
const imageSource = `url(${realisedImage.default.src})`;
---

<section class="container my-8 flex flex-col gap-8 items-center">
  <div class="card lg:card-side lg:grid lg:grid-cols-2 bg-base-100 shadow-xl">
    {
      image && (
        <Image
          class="w-full"
          src={image()}
          alt={`Dall-e generated image illustrating a prompt: ${language.data.meaning}`}
        />
      )
    }

    <div class="card-body bg-success-content">
      <p class="text-xl">
        in {language.data.languageName} we say:
      </p>
      <blockquote>
        <h2 class="card-title text-4xl font-serif">
          "{language.data.original}"
        </h2>
        {
          language.data.transliteration && (
            <p class="text-m italic">{language.data.transliteration}</p>
          )
        }
      </blockquote>
      <span>which means literally:</span>
      <p class="text-2xl">{language.data.meaning}</p>
      <div class="card-actions">
        <RandomLanguageButton currentSlug={language.slug} />
      </div>
    </div>
  </div>
</section>
<section class="container w-full mx-auto my-24">
  <div style={`background-image: ${imageSource}`} class="image-bg shadow-xl">
    <div
      class="p-8 max-w-screen-md shadow-xl bg-success-content mx-auto flex flex-col gap-8"
    >
      <article class="mx-auto w-full prose md:prose-lg xl:prose-xl dark:prose-invert">
        {
          language.body.length > 10 && (
            <>
              <Content />
            </>
          )
        }
        <p class="text-sm"
          >Published on: <FrontmatterDate
            date={language.data.pubDate}
            locale={locale}
          /></p
        >
        <p class="text-sm"
          >Permalink to this saying:
          <a href={`/${language.slug}`}>
            {`/${language.slug}`}
          </a>
        </p>
      </article>
    </div>
  </div>
</section>

<style>
  .image-bg {
    padding: 2rem;
    background-size: cover;
    background-position: center;
  }
</style>

<script>
  import "../scripts/elements.flagmeister.js";
</script>
