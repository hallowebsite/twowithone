---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import RandomLanguageButton from "@/components/RandomLanguageButton.astro";
import FrontmatterDate from "@/components/FrontmatterDate.astro";

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/images/*.{jpeg,jpg,png,gif}",
);

interface Props {
  language: CollectionEntry<"languages">;
}
const { language } = Astro.props;
const { Content } = await language.render();

// Split the slug into locale and slugWithoutPath
const [locale, slugWithoutPath] = language.slug.split("/");

// Construct the image path
const imagePath = `/src/images/${slugWithoutPath}.jpg`;

// Check if the image exists in the images object
const imageExists = images.hasOwnProperty(imagePath);

// Initialize imageSource
let imageSource = "";

// If the image exists, get its URL
if (imageExists) {
  const realisedImage = await images[imagePath]();
  imageSource = `url(${realisedImage.default.src})`;
}
---

<section class="container my-2 md:my-8 flex flex-col gap-8 items-center">
  <div class="card lg:card-side lg:grid lg:grid-cols-2 bg-base-100 shadow-xl">
    <div
      class="bg-base-100 aspect-square overflow-hidden flex items-center w-full max-h-48 md:max-h-56 lg:max-h-full"
    >
      {
        imageExists && (
          <Image
            class="h-full object-cover object-center w-full"
            src={images[imagePath]()}
            alt={`Dall-e generated image illustrating a prompt: ${language.data.meaning}`}
          />
        )
      }
    </div>

    <div class="card-body bg-success-content">
      <p class="text-xl">
        in {language.data.languageName} we say:
      </p>
      <h2
        dir={language.data.textDirection === "rtl" ? "rtl" : "ltr"}
        class:list={[
          "card-title text-3xl md:text-4xl font-serif",
          { rtl: language.data.textDirection === "rtl" },
        ]}
      >
        {language.data.original}
      </h2>
      {
        language.data.transliteration && (
          <p class="text-m italic">{language.data.transliteration}</p>
        )
      }
      <span>which means literally:</span>
      <p class="text-2xl">{language.data.meaning}</p>
      <div class="card-actions">
        <RandomLanguageButton currentSlug={language.slug} />
      </div>
    </div>
  </div>
</section>

<section class="container w-full mx-auto my-24">
  <div
    style={`background-image: ${imageSource}`}
    class="image-bg shadow-xl bg-accent"
  >
    <div
      class="p-8 max-w-screen-md shadow-xl bg-success-content mx-auto flex flex-col gap-8"
    >
      <article
        class="mx-auto w-full prose md:prose-lg xl:prose-xl dark:prose-invert"
      >
        {
          language.body.length > 10 && (
            <>
              <Content />
            </>
          )
        }
        <p class="text-sm">
          Published on: <FrontmatterDate
            date={language.data.pubDate}
            locale={locale}
          />
        </p>
        <p class="text-sm">
          Permalink to this saying:
          <a href={`/${language.slug}`}>
            {`/${language.slug}`}
          </a>
        </p>
      </article>
    </div>
  </div>
</section>

<style>
  .image-bg {
    padding: 2rem;
    background-size: cover;
    background-position: center;
    background-blend-mode: difference;
  }
</style>
