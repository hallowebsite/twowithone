---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/images/*.{jpeg,jpg,png,gif}",
);

interface Props {
  country: CollectionEntry<"languages">;
}
const { country } = Astro.props;
const Flags: any = country.data.flags.map((flag: string) => `flag-${flag}`);
const image = images["/src/images/" + country.slug + ".jpg"];
---

<section class="container mt-8 flex flex-col gap-8 items-center">
  <div class="flex gap-2 items-center justify-center">
    {
      Flags.map((Flag: any) => {
        return <Flag style="height: 30px;width:40px" />;
      })
    }
  </div>
  <p class="withFlag text-xl flex items-center gap-2">
    in {country.data.languageName["en"]} we say:
    <h2 class="text-4xl italic">"{country.data.original}"</h2>
    <span>which means literally:</span>
    <p class="text-2xl">{country.data.meaning["en"]}</p>
    {
      image && (
        <Image
          src={image()}
          alt={`Dall-e generated image illustrating a prompt: ${country.data.meaning["en"]}`}
        />
      )
    }
    <a role="button" class="btn btn-primary" href="/"
      >Go to other random langugage</a
    >
    <p class="mt-8 text-sm">
      <span>Permalink to this saying:</span>
      <a href={`/${country.slug}`}>
        {`/${country.slug}`}
      </a>
    </p>
  </p>

  <script>
    import "../scripts/elements.flagmeister.js";
  </script>
</section>
