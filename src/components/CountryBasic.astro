---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import { randomSorting } from "@/helpers/randomSorting";
import RandomLanguageButton from "@/components/RandomLanguageButton.astro";

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/images/*.{jpeg,jpg,png,gif}",
);

interface Props {
  language: CollectionEntry<"languages">;
}
const { language } = Astro.props;
const { Content } = await language.render();
const Flags: any = language.data.flags
  .map((flag: string) => `flag-${flag}`)
  .sort(randomSorting);
const image = images["/src/images/" + language.slug + ".jpg"];
---

<section class="container my-8 flex flex-col gap-8 items-center">
  <div class="card lg:card-side lg:grid lg:grid-cols-2 bg-base-100 shadow-xl">
    {
      image && (
        <Image
          class="w-full"
          src={image()}
          alt={`Dall-e generated image illustrating a prompt: ${language.data.meaning["en"]}`}
        />
      )
    }

    <div class="card-body bg-success-content">
      <div class="flex flex-wrap gap-2 items-center">
        {
          Flags.map((Flag: any) => {
            return <Flag style="height: 30px;width:40px" />;
          })
        }
      </div>
      <p class="text-xl flex items-center gap-2">
        in {language.data.languageName["en"]} we say:
      </p>
      <blockquote>
        <h2 class="card-title text-4xl italic">"{language.data.original}"</h2>
        {
          language.data.transliteration && (
            <p class="text-m italic">{language.data.transliteration}</p>
          )
        }
      </blockquote>
      <span>which means literally:</span>
      <p class="text-2xl">{language.data.meaning["en"]}</p>
      <div class="card-actions justify-end">
        <RandomLanguageButton currentSlug={language.slug} />
      </div>
    </div>
  </div>
</section>
<section class="container max-w-screen-lg mx-auto my-12 flex flex-col gap-8">
  {
    language.body.length > 10 && (
      <>
        <article class="prose md:prose-lg xl:prose-xl dark:prose-invert">
          <Content />
        </article>
      </>
    )
  }

  <p class="mt-8 text-sm">
    <span>Permalink to this saying:</span>
    <a href={`/${language.slug}`}>
      {`/${language.slug}`}
    </a>
  </p>
</section>
<script>
  import "../scripts/elements.flagmeister.js";
</script>
