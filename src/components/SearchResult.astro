---
import { Picture } from "astro:assets";
import { getEntry, type CollectionEntry } from "astro:content";
import { getAbsoluteLocaleUrl } from "astro:i18n";

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/images/*.{jpeg,jpg,png,gif}",
);

interface Props {
  language: CollectionEntry<"languages">;
}
const { language } = Astro.props;
const [locale, slugWithoutPath] = language.slug.split("/");
const referencedImageData = language.data.image;
const referencedImage = await getEntry(referencedImageData);

const imagePath = `/src/images/${slugWithoutPath}.jpg`;
---

<a
  href={getAbsoluteLocaleUrl(locale, slugWithoutPath)}
  class="search-result card card-compact card-bordered lg:card-side bg-neutral text-neutral-content shadow-xl hover:outline-dashed hover:outline-neutral hover:outline-offset-2"
>
  <figure>
    <Picture
      class="image opacity-0 h-full object-cover aspect-square object-center w-full"
      sizes="150px"
      width="150"
      height="150"
      widths={[150, 300, 450]}
      formats={["webp", "avif", "jpeg"]}
      onload="this.style.opacity=1"
      src={images[imagePath]()}
      alt={referencedImage.data.imageAlt || ""}
    />
  </figure>
  <div class="card-body">
    <p class="card-title">
      {language.data.languageName}
    </p>
    <p class="flex flex-col">
      <span class="text-xl font-serif">{language.data.original}</span>
      {
        language.data.transliteration && (
          <span class="text-sm">{language.data.transliteration}</span>
        )
      }
    </p>

    <p class="text-lg padding-2">
      {language.data.meaning}
    </p>
  </div>
</a>

<style>
  .search-result {
    display: grid;
    grid-template-columns: 150px 1fr;
  }
</style>
